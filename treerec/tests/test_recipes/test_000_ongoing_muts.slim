initialize() {

	initializeSLiMModelType("nonWF");
	initializeSLiMOptions(keepPedigrees=T); // necessary for pedigreeID

	// TREE SEQUENCE TEST OUTPUT
	source("init_marked_mutations.slim");
    initializeTreeSeq();

	defineConstant("K",8);  

	initializeGenomicElementType("g1",m1,1.0);
	initializeGenomicElement(g1, 0, 99);
	initializeMutationRate(0.0);
	initializeRecombinationRate(0.1);
}

reproduction() {
	subpop.addCrossed(individual,subpop.sampleIndividuals(1));
}
1 early() {
	sim.addSubpop("p1",100);
}   

1 early() {
	// TREE SEQUENCE TEST OUTPUT
	initializeMarks(n_marks);
}

early() {
	p1.fitnessScaling = K / p1.individualCount;
}

200 late() {

	// TREE SEQUENCE TEST OUTPUT
	outputMutationResult();

	sim.simulationFinished();
}
