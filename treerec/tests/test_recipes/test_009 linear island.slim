// linear island.slim : ^Total mutation frequencies: (.*)$
//
// A test script using a linear island neutral model
//
initialize() {
	initializeSLiMOptions(keepPedigrees=T); // necessary for pedigreeID
	source("init.slim");
    initializeTreeSeq();
	initializeMutationRate(1e-7);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 1e5-1);
	initializeRecombinationRate(1e-8);
}
1 early() {
	subpopCount = 10;
	for (i in 1:subpopCount)
		sim.addSubpop(i, 20);
	for (i in 2:subpopCount)
		sim.subpopulations[i-1].setMigrationRates(i-1, 0.2);
	for (i in 1:(subpopCount-1))
		sim.subpopulations[i-1].setMigrationRates(i+1, 0.05);
}
100 early() {
	addAncestralSamples(5);
}
500 late() { 
	outputMutationResult();
	cat("\nTotal mutation frequencies: " + sum(sim.mutationFrequencies(NULL)) + "\n"); 
}
