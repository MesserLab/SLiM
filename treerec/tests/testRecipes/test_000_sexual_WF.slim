initialize() {
    // TREE SEQUENCE TEST OUTPUT
    initializeSLiMOptions(keepPedigrees=T); // necessary for pedigreeID
    source("marked_mutations_setup.slim");

	initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, 9);
    initializeMutationRate(0.0);
    initializeRecombinationRate(0.2);    
}

1 late() {
    sim.addSubpop("p1",10);
    // TREE SEQUENCE TEST OUTPUT
    initializeMarks(n_marks);
}

2 {
    chooseAncestralSamples(5);
}

10 late() {

    // TREE SEQUENCE TEST OUTPUT
    outputMutationTypes();
    outputMutationResult();

    sim.simulationFinished();
}
